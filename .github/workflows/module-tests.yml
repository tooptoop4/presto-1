name: module-tests

on: [push, pull_request]

env:
  MAVEN_OPTS: "-Xmx512M -XX:+ExitOnOutOfMemoryError"
  MAVEN_INSTALL_OPTS: "-Xmx2G -XX:+ExitOnOutOfMemoryError"
  MAVEN_FAST_INSTALL: "-B -V -T C1 -DskipTests -Dair.check.skip-all"

jobs:
  hive-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: [
          config-empty,
          config-hdp3,
          # TODO config-cdh5,
        ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Install Hive Module
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./bin/retry ./mvnw install ${MAVEN_FAST_INSTALL} -am -pl presto-hive-hadoop2
      - name: Run Hive Tests
        run: |
          source presto-product-tests/conf/product-tests-${{ matrix.config }}.sh &&
            presto-hive-hadoop2/bin/run_hive_tests.sh
      - name: Run Hive S3 Tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AwsAccessKey }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AwsSecretKey }}
          S3_BUCKET: "presto-ci-test"
          S3_BUCKET_ENDPOINT: "s3.us-east-2.amazonaws.com"
        run: |
          if [ "${AWS_ACCESS_KEY_ID}" != "" ]; then
            source presto-product-tests/conf/product-tests-${{ matrix.config }}.sh &&
              presto-hive-hadoop2/bin/run_hive_s3_tests.sh
          fi
      - name: Run Hive Glue Tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AwsAccessKey }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AwsSecretKey }}
          AWS_REGION: us-east-2
        run: |
          if [ "${AWS_ACCESS_KEY_ID}" != "" ]; then
            ./mvnw test -B -Dair.check.skip-all -pl presto-hive -P test-hive-glue
          fi

  kudu-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Install Kudu Module
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./bin/retry ./mvnw install ${MAVEN_FAST_INSTALL} -am -pl presto-kudu
      - name: Run Kudu Tests -- disable InferSchema
        run: presto-kudu/bin/run_kudu_tests.sh "null"
      - name: Run Kudu Tests -- enable InferSchema, empty prefix
        run: presto-kudu/bin/run_kudu_tests.sh ""
      - name: Run Kudu Tests -- enable InferSchema, standard prefix
        run: presto-kudu/bin/run_kudu_tests.sh "presto::"

  test-other-modules:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./bin/retry ./mvnw install ${MAVEN_FAST_INSTALL} -pl '!presto-docs,!presto-server,!presto-server-rpm'
      - name: Maven Tests
        run: |
          ./mvnw test -B -Dair.check.skip-all -pl '
            !presto-main,
            !presto-tests,
            !presto-raptor-legacy,
            !presto-accumulo,
            !presto-cassandra,
            !presto-hive,!presto-orc,!presto-parquet,
            !presto-mongodb,!presto-kafka,!presto-elasticsearch,
            !presto-redis,
            !presto-sqlserver,!presto-postgresql,!presto-mysql,
            !presto-oracle,
            !presto-phoenix,!presto-iceberg,
            !presto-docs,!presto-server,!presto-server-rpm'

  x:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        modules: [
          "presto-main",
          "presto-tests",
          "presto-tests -P ci-only",
          "presto-raptor-legacy",
          "presto-accumulo",
          "presto-cassandra",
          "presto-hive,presto-orc",
          "presto-hive,presto-parquet -P test-parquet",
          "presto-mongodb,presto-kafka,presto-elasticsearch",
          "presto-redis",
          "presto-sqlserver,presto-postgresql,presto-mysql",
          "presto-oracle",
          "presto-phoenix,presto-iceberg",
        ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./bin/retry ./mvnw install ${MAVEN_FAST_INSTALL} -am -pl $(echo '${{ matrix.modules }}' | cut -d' ' -f1)
      - name: Maven Tests
        run: ./mvnw test -B -Dair.check.skip-all -pl ${{ matrix.modules }}
